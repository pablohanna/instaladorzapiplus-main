#!/bin/bash

# Fun√ß√£o para exibir um banner de cabe√ßalho
print_banner() {
  echo "#######################################"
  echo "#                                     #"
  echo "#       Gerenciador Apexchat          #"
  echo "#                                     #"
  echo "#######################################"
}

# Fun√ß√£o para coletar a senha root do MySQL
get_mysql_root_password() {
  print_banner
  printf "${WHITE} üíª Insira senha para o usuario Deploy e Banco de Dados (N√£o utilizar caracteres especiais):${GRAY_LIGHT}\n\n"
  read -s -p "> " mysql_root_password
  echo
}

# Fun√ß√£o para coletar o link do GitHub
get_link_git() {
  print_banner
  printf "${WHITE} üíª Insira o link do GITHUB do Whaticket que deseja instalar:${GRAY_LIGHT}\n\n"
  read -p "> " link_git
}

# Fun√ß√£o para coletar o nome da inst√¢ncia
get_instancia_add() {
  print_banner
  printf "${WHITE} üíª Informe um nome para a Instancia/Empresa que ser√° instalada (N√£o utilizar espa√ßos ou caracteres especiais, Utilizar Letras minusculas; ):${GRAY_LIGHT}\n\n"
  read -p "> " instancia_add
}

# Fun√ß√£o para coletar a quantidade m√°xima de conex√µes
get_max_whats() {
  print_banner
  printf "${WHITE} üíª Informe a Qtde de Conex√µes/Whats que a ${instancia_add} poder√° cadastrar:${GRAY_LIGHT}\n\n"
  read -p "> " max_whats
}

# Fun√ß√£o para coletar a quantidade m√°xima de usu√°rios
get_max_user() {
  print_banner
  printf "${WHITE} üíª Informe a Qtde de Usuarios/Atendentes que a ${instancia_add} poder√° cadastrar:${GRAY_LIGHT}\n\n"
  read -p "> " max_user
}

# Fun√ß√£o para coletar a URL do frontend
get_frontend_url() {
  print_banner
  printf "${WHITE} üíª Digite o dom√≠nio do FRONTEND/PAINEL para a ${instancia_add}:${GRAY_LIGHT}\n\n"
  read -p "> " frontend_url
}

# Fun√ß√£o para coletar a URL do backend
get_backend_url() {
  print_banner
  printf "${WHITE} üíª Digite o dom√≠nio do BACKEND/API para a ${instancia_add}:${GRAY_LIGHT}\n\n"
  read -p "> " backend_url
}

# Fun√ß√£o para coletar a porta do frontend
get_frontend_port() {
  print_banner
  printf "${WHITE} üíª Digite a porta do FRONTEND para a ${instancia_add}; Ex: 3000 A 3999 ${GRAY_LIGHT}\n\n"
  read -p "> " frontend_port
}

# Fun√ß√£o para coletar a porta do backend
get_backend_port() {
  print_banner
  printf "${WHITE} üíª Digite a porta do BACKEND para esta instancia; Ex: 4000 A 4999 ${GRAY_LIGHT}\n\n"
  read -p "> " backend_port
}

# Fun√ß√£o para coletar a porta do Redis
get_redis_port() {
  print_banner
  printf "${WHITE} üíª Digite a porta do REDIS/AGENDAMENTO MSG para a ${instancia_add}; Ex: 5000 A 5999 ${GRAY_LIGHT}\n\n"
  read -p "> " redis_port
}

# Fun√ß√£o para coletar o nome da inst√¢ncia a ser deletada
get_empresa_delete() {
  print_banner
  printf "${WHITE} üíª Digite o nome da Instancia/Empresa que ser√° Deletada (Digite o mesmo nome de quando instalou):${GRAY_LIGHT}\n\n"
  read -p "> " empresa_delete
}

# Fun√ß√£o para coletar o nome da inst√¢ncia a ser atualizada
get_empresa_atualizar() {
  print_banner
  printf "${WHITE} üíª Digite o nome da Instancia/Empresa que deseja Atualizar (Digite o mesmo nome de quando instalou):${GRAY_LIGHT}\n\n"
  read -p "> " empresa_atualizar
}

# Fun√ß√£o para coletar o nome da inst√¢ncia a ser bloqueada
get_empresa_bloquear() {
  print_banner
  printf "${WHITE} üíª Digite o nome da Instancia/Empresa que deseja Bloquear (Digite o mesmo nome de quando instalou):${GRAY_LIGHT}\n\n"
  read -p "> " empresa_bloquear
}

# Fun√ß√£o para coletar o nome da inst√¢ncia a ser desbloqueada
get_empresa_desbloquear() {
  print_banner
  printf "${WHITE} üíª Digite o nome da Instancia/Empresa que deseja Desbloquear (Digite o mesmo nome de quando instalou):${GRAY_LIGHT}\n\n"
  read -p "> " empresa_desbloquear
}

# Fun√ß√£o para coletar o nome da inst√¢ncia para alterar dom√≠nios
get_empresa_dominio() {
  print_banner
  printf "${WHITE} üíª Digite o nome da Instancia/Empresa que deseja Alterar os Dominios (Aten√ß√£o para alterar os dominios precisa digitar os 2, mesmo que v√° alterar apenas 1):${GRAY_LIGHT}\n\n"
  read -p "> " empresa_dominio
}

# Fun√ß√£o para coletar o novo dom√≠nio do frontend
get_alter_frontend_url() {
  print_banner
  printf "${WHITE} üíª Digite o NOVO dom√≠nio do FRONTEND/PAINEL para a ${empresa_dominio}:${GRAY_LIGHT}\n\n"
  read -p "> " alter_frontend_url
}

# Fun√ß√£o para coletar o novo dom√≠nio do backend
get_alter_backend_url() {
  print_banner
  printf "${WHITE} üíª Digite o NOVO dom√≠nio do BACKEND/API para a ${empresa_dominio}:${GRAY_LIGHT}\n\n"
  read -p "> " alter_backend_url
}

# Fun√ß√£o para coletar a porta do frontend a ser alterada
get_alter_frontend_port() {
  print_banner
  printf "${WHITE} üíª Digite a porta do FRONTEND da Instancia/Empresa ${empresa_dominio}; A porta deve ser o mesma informada durante a instala√ß√£o ${GRAY_LIGHT}\n\n"
  read -p "> " alter_frontend_port
}

# Fun√ß√£o para coletar a porta do backend a ser alterada
get_alter_backend_port() {
  print_banner
  printf "${WHITE} üíª Digite a porta do BACKEND da Instancia/Empresa ${empresa_dominio}; A porta deve ser o mesma informada durante a instala√ß√£o ${GRAY_LIGHT}\n\n"
  read -p "> " alter_backend_port
}

# Fun√ß√£o para coletar todas as URLs necess√°rias
get_urls() {
  get_mysql_root_password
  get_link_git
  get_instancia_add
  get_max_whats
  get_max_user
  get_frontend_url
  get_backend_url
  get_frontend_port
  get_backend_port
  get_redis_port
}

# Fun√ß√£o para atualizar o software
software_update() {
  get_empresa_atualizar
  frontend_update
  backend_update
}

# Fun√ß√£o para deletar o software
software_delete() {
  get_empresa_delete
  deletar_tudo
}

# Fun√ß√£o para bloquear o software
software_bloquear() {
  get_empresa_bloquear
  configurar_bloqueio
}

# Fun√ß√£o para desbloquear o software
software_desbloquear() {
  get_empresa_desbloquear
  configurar_desbloqueio
}

# Fun√ß√£o para alterar os dom√≠nios do software
software_dominio() {
  get_empresa_dominio
  get_alter_frontend_url
  get_alter_backend_url
  get_alter_frontend_port
  get_alter_backend_port
  configurar_dominio
}

# Fun√ß√£o para exibir as op√ß√µes de consulta
inquiry_options() {
  print_banner
  printf "${WHITE} üíª Bem vindo(a) ao Gerenciador Apexchat, Selecione abaixo a proxima a√ß√£o!${GRAY_LIGHT}\n\n"
  printf "   [0] Instalar whaticket\n"
  printf "   [1] Atualizar whaticket\n"
  printf "   [2] Deletar Whaticket\n"
  printf "   [3] Bloquear Whaticket\n"
  printf "   [4] Desbloquear Whaticket\n"
  printf "   [5] Alterar dom√≠nio Whaticket\n"
  printf "\n"
  read -p "> " option

  case "${option}" in
    0) 
      get_urls
      # Chame a fun√ß√£o de instala√ß√£o aqui (n√£o inclu√≠da no script fornecido)
      ;;
    1) 
      software_update 
      ;;
    2) 
      software_delete 
      ;;
    3) 
      software_bloquear 
      ;;
    4) 
      software_desbloquear 
      ;;
    5) 
      software_dominio 
      ;;
    *) 
      exit ;;
  esac
}

# Executa a fun√ß√£o de exibi√ß√£o de op√ß√µes
inquiry_options
